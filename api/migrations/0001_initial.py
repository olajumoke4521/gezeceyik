# Generated by Django 5.2.1 on 2025-05-16 08:25

import django.db.models.deletion
import parler.fields
import parler.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon_key', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ExpectationDefinition',
            fields=[
                ('key', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('icon_key', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('code', models.CharField(max_length=2, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('flag_icon_key', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SortTagDefinition',
            fields=[
                ('key', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('icon_key', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(choices=[('general', 'General'), ('region', 'Region'), ('amenity', 'Amenity')], default='general', max_length=20)),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Address')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('main_image', models.URLField(blank=True, max_length=500, null=True, verbose_name='Main Image URL')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='WhatsApp')),
                ('map_link', models.URLField(blank=True, max_length=500, null=True, verbose_name='Map Link')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('pinterest', models.URLField(blank=True, null=True, verbose_name='Pinterest')),
                ('outside_area', models.BooleanField(default=False, verbose_name='Outside Area')),
                ('inside_area', models.BooleanField(default=False, verbose_name='Inside Area')),
                ('reservation', models.BooleanField(default=False, verbose_name='Reservation Taken')),
                ('kids_menu', models.BooleanField(default=False, verbose_name='Kids Menu')),
                ('baby_sit', models.BooleanField(default=False, verbose_name='Baby Sitting')),
                ('kard_pay', models.BooleanField(default=False, verbose_name='Card Payment')),
                ('cash', models.BooleanField(default=False, verbose_name='Cash Payment')),
                ('free_park_area', models.BooleanField(default=False, verbose_name='Free Parking Area')),
                ('bar', models.BooleanField(default=False, verbose_name='Bar')),
                ('dessert', models.BooleanField(default=False, verbose_name='Dessert')),
                ('kitchen', models.BooleanField(default=False, verbose_name='Kitchen')),
                ('wheelchair_accessible_entrance', models.BooleanField(default=False, verbose_name='Wheelchair Accessible')),
                ('pets_allow', models.BooleanField(default=False, verbose_name='Pets Allow')),
                ('fish', models.BooleanField(default=False, verbose_name='Fish')),
                ('meat_and_chicken', models.BooleanField(default=False, verbose_name='Meat/Chicken')),
                ('popular', models.BooleanField(default=False, verbose_name='Popular')),
                ('historical_places', models.BooleanField(default=False, verbose_name='Historical Places')),
                ('alcohol', models.BooleanField(default=False, verbose_name='Alcohol')),
                ('beach', models.BooleanField(default=False, verbose_name='Beach')),
                ('coffee', models.BooleanField(default=False, verbose_name='Coffee')),
                ('creative_places', models.BooleanField(default=False, verbose_name='Creative Place')),
                ('castles', models.BooleanField(default=False, verbose_name='Castle')),
                ('museum', models.BooleanField(default=False, verbose_name='Museum')),
                ('parks', models.BooleanField(default=False, verbose_name='Parks')),
                ('waterfalls', models.BooleanField(default=False, verbose_name='Waterfalls')),
                ('hiking_trails', models.BooleanField(default=False, verbose_name='Hiking trails')),
                ('kyrenia', models.BooleanField(default=False, verbose_name='Kyrenia')),
                ('nicosia', models.BooleanField(default=False, verbose_name='Nicosia')),
                ('famagusta', models.BooleanField(default=False, verbose_name='Famagusta')),
                ('iskele', models.BooleanField(default=False, verbose_name='Iskele')),
                ('guzelyurt', models.BooleanField(default=False, verbose_name='Guzelyurt')),
                ('karpaz', models.BooleanField(default=False, verbose_name='Karpaz')),
                ('lefke', models.BooleanField(default=False, verbose_name='Lefke')),
                ('currency_supported', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('liked_by_devices', models.JSONField(blank=True, default=list)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='api.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Place',
                'verbose_name_plural': 'Places',
                'ordering': ['-created_at', 'translations__name'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PlaceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField(max_length=500)),
                ('order', models.PositiveIntegerField(default=0)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='api.place', verbose_name='Place')),
            ],
            options={
                'verbose_name': 'Place Image',
                'verbose_name_plural': 'Place Images',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CategoryTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='api.category')),
            ],
            options={
                'verbose_name': 'category Translation',
                'db_table': 'api_category_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ExpectationDefinitionTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=255, verbose_name='Label')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='api.expectationdefinition')),
            ],
            options={
                'verbose_name': 'expectation definition Translation',
                'db_table': 'api_expectationdefinition_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OpeningHour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], verbose_name='Day of Week')),
                ('open_time', models.TimeField(verbose_name='Open Time')),
                ('close_time', models.TimeField(verbose_name='Close Time')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='open_times', to='api.place', verbose_name='Place')),
            ],
            options={
                'verbose_name': 'Opening Hour',
                'verbose_name_plural': 'Opening Hours',
                'ordering': ['day_of_week', 'open_time'],
                'unique_together': {('place', 'day_of_week', 'open_time')},
            },
        ),
        migrations.CreateModel(
            name='PlaceTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='api.place')),
            ],
            options={
                'verbose_name': 'Place Translation',
                'db_table': 'api_place_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SortTagDefinitionTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=255, verbose_name='Label')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='api.sorttagdefinition')),
            ],
            options={
                'verbose_name': 'sort tag definition Translation',
                'db_table': 'api_sorttagdefinition_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
